{"version":3,"sources":["serviceWorker.ts","components/navBar/NavBar.tsx","components/launches/launchesView/launchItem/LaunchItem.tsx","components/header/Header.tsx","components/launches/launchesView/LaunchesView.tsx","components/launches/Launches.tsx","App.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","NavBar","route","to","className","aria-hidden","focusable","data-prefix","data-icon","role","xmlns","viewBox","fill","d","countries","require","LaunchItem","props","launchDate","Date","launch","netstamp","windowStart","windowstart","windowEnd","windowend","state","this","style","rocket","imageURL","backgroundImage","name","replace","toLocaleString","hour12","weekday","day","month","toLocaleTimeString","agencies","length","abbrev","countryCode","React","Component","Header","h1","href","target","rel","LaunchesView","id","isLoaded","launches","map","i","key","Launches","undefined","fetch","then","res","json","result","setState","console","log","error","App","ReactDOM","render","StrictMode","exact","path","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.714ec8f4.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as React from 'react'\nimport './navbar.css'\nimport { Link } from 'react-router-dom'\n\ninterface NavBarProps {\n    route: 'launches' | 'rockets' | 'agencies'\n}\n\nconst NavBar: React.FC<NavBarProps> = ({route}: NavBarProps) => {\n    return <nav>\n        <ul>\n            <Link to=\"/fusees\">\n                <li className={(route === 'rockets' ? 'active' : '')}>\n                    <span>\n                        <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"space-shuttle\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 640 512\"><path fill=\"currentColor\" d=\"M592.604 208.244C559.735 192.836 515.777 184 472 184H186.327c-4.952-6.555-10.585-11.978-16.72-16H376C229.157 137.747 219.403 32 96.003 32H96v128H80V32c-26.51 0-48 28.654-48 64v64c-23.197 0-32 10.032-32 24v40c0 13.983 8.819 24 32 24v16c-23.197 0-32 10.032-32 24v40c0 13.983 8.819 24 32 24v64c0 35.346 21.49 64 48 64V352h16v128h.003c123.4 0 133.154-105.747 279.997-136H169.606c6.135-4.022 11.768-9.445 16.72-16H472c43.777 0 87.735-8.836 120.604-24.244C622.282 289.845 640 271.992 640 256s-17.718-33.845-47.396-47.756zM488 296a8 8 0 0 1-8-8v-64a8 8 0 0 1 8-8c31.909 0 31.942 80 0 80z\"></path></svg>\n                    </span>\n                    Fusées\n                </li>\n            </Link>\n            <Link to=\"/lancements\">\n                <li className={(route === 'launches' ? 'active' : '')}>\n                    <span>\n                    <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"rocket\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\" d=\"M505.12019,19.09375c-1.18945-5.53125-6.65819-11-12.207-12.1875C460.716,0,435.507,0,410.40747,0,307.17523,0,245.26909,55.20312,199.05238,128H94.83772c-16.34763.01562-35.55658,11.875-42.88664,26.48438L2.51562,253.29688A28.4,28.4,0,0,0,0,264a24.00867,24.00867,0,0,0,24.00582,24H127.81618l-22.47457,22.46875c-11.36521,11.36133-12.99607,32.25781,0,45.25L156.24582,406.625c11.15623,11.1875,32.15619,13.15625,45.27726,0l22.47457-22.46875V488a24.00867,24.00867,0,0,0,24.00581,24,28.55934,28.55934,0,0,0,10.707-2.51562l98.72834-49.39063c14.62888-7.29687,26.50776-26.5,26.50776-42.85937V312.79688c72.59753-46.3125,128.03493-108.40626,128.03493-211.09376C512.07526,76.5,512.07526,51.29688,505.12019,19.09375ZM384.04033,168A40,40,0,1,1,424.05,128,40.02322,40.02322,0,0,1,384.04033,168Z\"></path></svg>\n                    </span>\n                    Lancements\n                </li>\n            </Link>\n            <Link to=\"/agences-spatiales\">\n                <li className={(route === 'agencies' ? 'active' : '')}>\n                    <span>\n                        <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"building\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"><path fill=\"currentColor\" d=\"M436 480h-20V24c0-13.255-10.745-24-24-24H56C42.745 0 32 10.745 32 24v456H12c-6.627 0-12 5.373-12 12v20h448v-20c0-6.627-5.373-12-12-12zM128 76c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v40c0 6.627-5.373 12-12 12h-40c-6.627 0-12-5.373-12-12V76zm0 96c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v40c0 6.627-5.373 12-12 12h-40c-6.627 0-12-5.373-12-12v-40zm52 148h-40c-6.627 0-12-5.373-12-12v-40c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v40c0 6.627-5.373 12-12 12zm76 160h-64v-84c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v84zm64-172c0 6.627-5.373 12-12 12h-40c-6.627 0-12-5.373-12-12v-40c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v40zm0-96c0 6.627-5.373 12-12 12h-40c-6.627 0-12-5.373-12-12v-40c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v40zm0-96c0 6.627-5.373 12-12 12h-40c-6.627 0-12-5.373-12-12V76c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v40z\"></path></svg>\n                    </span>\n                    Agences\n                </li>\n            </Link>\n        </ul>\n    </nav>\n}\n\nexport default NavBar","import React from 'react'\nimport './launchItem.css'\n\nimport { Launch } from '../../../../types/launch'\nimport { Link } from 'react-router-dom'\n\nconst countries = require('../../../../iso3ToCountryNames.json')\n\ninterface LaunchItemProps {\n    launch: Launch\n}\ninterface LaunchItemState {\n    launchDate: Date,\n    windowStart: Date,\n    windowEnd: Date\n}\n\nexport default class LaunchItem extends React.Component<LaunchItemProps, LaunchItemState> {\n    constructor(props: LaunchItemProps) {\n        super(props)\n\n        const launchDate = new Date(this.props.launch.netstamp * 1000)\n        const windowStart = new Date(this.props.launch.windowstart)\n        const windowEnd = new Date(this.props.launch.windowend)\n\n        this.state = {\n            launchDate: launchDate,\n            windowStart: windowStart,\n            windowEnd: windowEnd\n        }\n    }\n\n    render() {\n        const { launch } = this.props\n        return <div className=\"launch-item-container\">\n            <div className=\"launch-item\">\n                <div\n                    className=\"image-container\"\n                    style={\n                        (launch.rocket.imageURL !== 'https://launchlibrary1.nyc3.digitaloceanspaces.com/RocketImages/placeholder_1920.png')\n                        ? { backgroundImage: `url(${launch.rocket.imageURL})` }\n                        : { backgroundImage: `url('/rocket_image_placeholder.svg')` }\n                    }\n                >\n                </div>\n                <div className=\"launch-info\">\n                    <h2>{launch.name.replace(/ *\\([^)]*\\) */g, \"\")}</h2>\n                    <p>\n                        <span className=\"date\">\n                            {this.state.launchDate.toLocaleString('fr-FR', {\n                                hour12: false,\n                                weekday: 'long',\n                                day: 'numeric',\n                                month: 'long'\n                            })}\n                            &nbsp;-&nbsp;\n                            {(this.state.launchDate.toLocaleTimeString('fr-FR'))}<span>&nbsp; GMT+2:00</span> \n                        </span>\n                    </p>\n                    {\n                        launch.rocket && launch.rocket.agencies &&  launch.rocket.agencies.length > 0 && launch.rocket.agencies[0].name.length > 15 &&\n                        <Link to=\"\"><span>Agence - </span>{launch.rocket.agencies[0].abbrev} ({countries[launch.rocket.agencies[0].countryCode]})</Link> // TODO : Replace by a link to the agency item page\n                    }\n                    {\n                        launch.rocket && launch.rocket.agencies &&  launch.rocket.agencies.length > 0 && launch.rocket.agencies[0].name.length <= 15 &&\n                        <Link to=\"\"><span>Agence - </span>{launch.rocket.agencies[0].name} ({countries[launch.rocket.agencies[0].countryCode]})</Link> // TODO : Replace by a link to the agency item page\n                    }\n                    <Link to=\"\">\n                        <span>Fusée - </span>\n                        {launch.rocket.name}\n                    </Link>\n                </div>\n            </div>\n        </div>\n    }\n}\n","import React from 'react'\nimport './header.css'\n\ninterface HeaderProps {\n    h1: string\n}\n\nconst Header: React.FC<HeaderProps> = ({ h1 }: HeaderProps) => {\n    return <header>\n        <h1>{h1}</h1>\n        <div className=\"author-credits\">\n            <span>\n                Remerciements <a href=\"https://launchlibrary.net\" target=\"_blank\" rel=\"noopener noreferrer\">Launch library</a>&nbsp;🛰️\n            </span>\n            <span>\n                Fait par <a href=\"https://www.baptiste-drillien.com\" target=\"_blank\" rel=\"noopener noreferrer\">Baptiste Drillien</a>&nbsp;🚀\n            </span>\n        </div>\n    </header>\n}\n\nexport default Header","import React from 'react'\nimport './launchesView.css'\n\nimport { Launch } from '../../../types/launch'\nimport LaunchItem from './launchItem/LaunchItem'\nimport Header from '../../header/Header'\n\ninterface LaunchesViewProps {\n    isLoaded: boolean\n    launches?: Launch[]\n}\ninterface LaunchesViewState { }\n\nexport default class LaunchesView extends React.Component<LaunchesViewProps, LaunchesViewState> {\n    render() {\n        return <section id=\"launches\">\n            <Header h1=\"Calendrier des lancements\" />\n            <div className=\"launches-list\">\n\n                {\n                    !this.props.isLoaded\n                        ? <div className=\"loader\">\n                            <span className=\"elem\"></span>\n                            <span className=\"elem\"></span>\n                            <span className=\"elem\"></span>\n                            <span className=\"elem\"></span>\n                            <span className=\"elem\"></span>\n                            <span className=\"elem\"></span>\n                            <span className=\"elem\"></span>\n                        </div>\n                        : <div>\n                            {\n                                this.props.launches?.map((launch, i) => {\n                                    return <LaunchItem key={i} launch={launch} />\n                                })\n                            }\n                        </div>\n                }\n            </div>\n        </section>\n    }\n}\n","import React from 'react'\n\nimport LaunchesView from './launchesView/LaunchesView'\n\nimport { Launch } from '../../types/launch'\n\ninterface LaunchesProps {}\ninterface LaunchesState {\n    isLoaded: boolean\n    launches?: Launch[]\n}\n\nexport default class Launches extends React.Component<LaunchesProps, LaunchesState> {\n    constructor(props: LaunchesProps) {\n        super(props)\n\n        this.state = {\n            isLoaded: false,\n            launches: undefined\n        }\n    }\n\n    componentDidMount() {\n        fetch('https://launchlibrary.net/1.4/launch?next=20&mode=verbose')\n        .then(res => res.json())\n        .then(result => {\n            this.setState({\n                isLoaded: true,\n                launches: result.launches\n            }, () => console.log(this.state.launches))\n        }, error => {\n            console.error('something went wrong while fetching data')\n        })\n    }\n\n    render() {\n        return <LaunchesView \n            isLoaded={this.state.isLoaded}\n            launches={this.state.launches}\n        />\n    }\n}","import React from 'react'\nimport './App.css'\n\nimport NavBar from './components/navBar/NavBar'\nimport Launches from './components/launches/Launches'\n\ninterface AppProps {\n    route: 'launches' | 'rockets' | 'agencies'\n}\n\nconst App: React.FC<AppProps> = ({route}: AppProps) => {\n    return <div id=\"app\">\n            <main>\n                {\n                    route === 'launches' &&\n                    <Launches />\n                }\n                {\n                    route === 'rockets' &&\n                    <h1>En cours de développement</h1>\n                }\n                {\n                    route === 'agencies' &&\n                    <h1>En cours de développement</h1>\n                }\n            </main>\n        <NavBar route={route} />\n    </div>\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport * as serviceWorker from './serviceWorker'\n\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\n\nimport App from './App'\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <Switch>\n                <Route exact path=\"/lancements\">\n                    <App route=\"launches\" />\n                </Route>\n                <Route exact path=\"/fusees\">\n                    <App route=\"rockets\" />\n                </Route>\n                <Route exact path=\"/agences-spatiales\">\n                    <App route=\"agencies\" />\n                </Route>\n                <Route path=\"*\">\n                    <App route=\"launches\" />\n                </Route>\n            </Switch>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}